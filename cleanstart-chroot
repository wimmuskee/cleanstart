#!/bin/bash
#
# cleanstart-chroot is part of the cleanstart package
#
# Copyright 2016 Wim Muskee
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

SHARE_PATH="/usr/share/cleanstart"

if [[ -f share/common.sh ]]; then
	SHARE_PATH="share"
fi

source "${SHARE_PATH}/common.sh"


# Reading options
if ! args=$(getopt -n "$0" -o "c:hp:v" \
	-l "config:,help,profile:,version" -- "$@")
then
	exit 1
fi
eval "set -- $args"
while true ; do
	case "$1" in
		--config|-c) shift; CONFIGFILE=$1 ;;
		--help|-h) usage; exit 0 ;;
		--profile|-p) shift; PROFILE=$1 ;;
		--version|-v) echo "${VERSION}"; exit 0 ;;
		--) shift ; break ;;
		*) die "$0: Internal error!" ;;
	esac
	shift
done

sourceConfig ${CONFIGFILE}
validateProfile ${PROFILE}
sourceProfile ${PROFILE}

BASE_DIR="${CS_CHROOTS}/${PROFILE}"

# make sure profile dir exists
[[ ! -d ${BASE_DIR} ]] && die "provided profile does not have a chroot: ${BASE_DIR}"

# mounting dirs to chroot
mount -t proc proc ${BASE_DIR}/proc
mount --rbind /sys ${BASE_DIR}/sys
mount --make-rslave ${BASE_DIR}/sys
mount --rbind /dev ${BASE_DIR}/dev
mount --make-rslave ${BASE_DIR}/dev
mount --bind /usr/portage ${BASE_DIR}/usr/portage

# bind mounting profile config mounts
for line in ${BIND_MOUNTS}; do
	src=$(echo $line | cut -d ":" -f 1)
	target=$(echo $line | cut -d ":" -f 2)
	
	if checkBindmountDir ${src} && checkBindmountDir ${target}; then
		mkdir -p ${BASE_DIR}${target}
		mount --bind ${src} ${BASE_DIR}${target}
	fi
done


chroot ${BASE_DIR} /bin/bash


# and unmount stuff after running
MOUNTED_DIRS=$(mktemp)

for dir in $(mount | grep ${BASE_DIR} | cut -d " " -f 3); do
	echo $dir >> $MOUNTED_DIRS
done

for dir in $(cat $MOUNTED_DIRS | sort -r); do
	umount $dir
done

rm $MOUNTED_DIRS
